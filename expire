#!/usr/bin/perl -w
use strict;
use POSIX qw(strftime);

sub dirname($)
{
    my $filename = shift @_;
    $filename =~ m{(.*)/([^/]+)}  &&  return $1;
    return ".";
}

my $homedir = dirname($0);
chdir $homedir
    or die("Can't find home directory '$homedir'\n");

chdir 'data'
    or die("No data/ subdir!");

if ($ENV{'GATEWAY_INTERFACE'}) {
    # Called as CGI.  That's OK if we were POSTed.
    if ($ENV{'REQUEST_METHOD'} ne 'POST') {
	my $msg = "Expire may be called via CGI, but only with POST.\n";
	print "Content-type: text/plain\nStatus: 403\n\n$msg";
	die $msg;
    }
}

# delete really old files
foreach my $file (glob("*/*")) {
    if (-M $file > 14) {
	unlink($file) or warn "Cannot unlink($file): $!";
    }
}

# create a warning if the newest file in a dir is too old
foreach my $dir (glob("*")) {
    my $newest = 1000;
    my $newest_stamp = 1000;
    
    my @files = glob("$dir/*");
    
    # the .stamp file notes that the dir has been updated, even if there are
    # new new interesting entries
    if (-e "$dir/.stamp") {
	$newest_stamp = -M "$dir/.stamp";
    } elsif (scalar(@files) == 0) {
        # maybe a brand new dir
        system("touch", "$dir/.stamp");
        system("touch", "$dir/00-Initial-Entry.ok");
	$newest_stamp = $newest = 0;
    }	
    
    foreach my $file (glob("$dir/*")) {
	my $n = -M $file;
	$newest = $n if ($newest > $n);
	$newest_stamp = $n if ($newest_stamp > $n);
    }

    my @WARN;
    if ($newest_stamp > 0.3 || $newest > 1.1) {
	push @WARN, sprintf("No recent entries in this directory!\n".
			    "  Latest stamp is %.2f days old.\n".
			    "  Latest file is %.2f days old.\n",
			    $newest_stamp, $newest);
    }

    if (@WARN) {
	my $date = u2stamp($^T);
	my $efile = "$dir/$date." . int(rand(100000)).'.warn';

	open my $fh, ">$efile" or die("$efile: $!\n");
	my $host = `hostname`;
	$host =~ s/\s+//g;
	my $s = (@WARN == 1 ? '' : 'S');
	print $fh join "\n", "WARNING$s (host=$host)\n", @WARN;
    }
}

if ($ENV{'GATEWAY_INTERFACE'}) {
    # Called as CGI.  That's OK if we were POSTed.
    print "Content-type: text/plain\n\nExpiry ran OK.\n";
}


sub u2stamp {
    my $utime = shift;
    return strftime("%Y%m%d-%H%M%S", localtime($utime));
}
